import random
from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
import character as charac

class Config(BaseModel):
    description: str

class Message(BaseModel):
    message: str

app = FastAPI()

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

current_character = None

@app.post("/config/")
async def receive_frontend(config_prompt: Config):
    """Receives text prompt via post request from front-end, configure character using prompt, then returns an image link generated from the prompt"""
    global current_character
    current_character = charac.Character(config_prompt)
    response = None # find an API that can generate a background image
    #print(f"Received in config")
    return {"image_link": response}

@app.post("/genMessage/")
async def generate_message(json_data: Message):
    global current_character
    """Receives text prompt via post request from front-end, then returns the message generated by back-end's character"""
    message = current_character.chat(json_data.message)
    response = {"message": f"{message}"}
    #print(f"The response: {response}")
    return response
